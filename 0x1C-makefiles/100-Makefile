# Makefile for 'school' executable

# Variables
CC = gcc
SRC = main.c school.c
NAME = school
CFLAGS = -Wall -Werror -Wextra -pedantic
SOURCES = $(SRC) # List of source files (avoid duplicating $(SRC))
OBJECTS = $(SOURCES:.c=.o) # List of object files
RM = rm -f

# Default rule to build the executable
all: $(NAME)

# Rule to create the executable from object files
$(NAME): $(OBJECTS)
	$(CC) $(OBJECTS) -o $(NAME) $(CFLAGS)

# Clean rule to delete Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ $(NAME)

# Oclean rule to delete the object files
oclean:
	$(RM) $(OBJECTS)

# Fclean rule to delete Emacs and Vim temporary files, the executable, and object files
fclean: clean oclean

# Rule to force recompilation of all source files
re: fclean all

# Check if the header file m.h is present
$(SOURCES): m.h

.PHONY: all clean oclean fclean re
